

"""
Given an array of integers numsÂ and an integer target, return indices of the two numbers such that they add up to target.

You may assume that each input would have exactly one solution, and you may not use the same element twice.

You can return the answer in any order.
#? Time O(N): We do a loop over array of size n
#? S
"""

def two_sum(nums, target):
    num_to_index= {}
    for i in range (len(nums)-1):
        goal = target - nums[i]
        if goal in dict:
            return (i, num_to_index[goal])
        num_to_index[num]=i
    return(None, None)


nums= [3,3]
target = 6

result = two_sum(nums, target)

print (f"The numbers that add up to {target} can be found in indices {result[0]} and {result[1]}.")

#Javascript

/**
 * @param {number[]} nums
 * @param {number} target
 * @return {number[]}
 */
var twoSum = function(nums, target) {
    let numToIndex = {};
    for (let i = 0; i < nums.length; i++) {
        let goal = target - nums[i];
        if (goal in numToIndex) {
            return [i, numToIndex[goal]];
        }
        numToIndex[nums[i]] = i;
    }
    return null;
};

var nums = [3,3];
var target = 6;

var result = twoSum(nums, target);

var twoSum = function (nums, target){
    numToIndex = {};
    for (let i = 0; i <length(nums), i++){
        goal = target - nums[i];
        if (goal in numToIndex){
            return (i, numToIndex[nums[i]]);
        }
        numToIndex[nums[i]] = i;
    }
    return null;
};

var nums = [3,4,5]
var target = 8

var result = twoSum(nums, target)
console.log(result)