# *Given an array of integers of size N, find maximum sum of K consecutive elements.

def max_sum(arr, window_size):
    array_size = len (array)
    if (array_size < window_size):
        print ("Invalid operation, check your input!")
        return None
    else:
        current_sum = sum([arr[i] for i in range(window_size)])
        max_sum = current_sum

        for i in range (array_size - window_size):
            current_sum = current_sum - arr[i] + arr[i+window_size]
            max_sum = max (max_sum, current_sum)

        return max_sum


arr = [20, 50, 70, 390, -410, 5, 6, 8, 345, 432, -54]

k = 2

result = max_sum (arr, k)

if result != None:
    print (result)


#*----------WHITEBOARD ATTEMPT----------

def max_sum (arr, k):
    array_size = len(arr)
    if k > array_size:
        print ("Invalid input! Window size cannot be larger than array")
    else:
        current_sum = sum([arr[i]for i in range (k)])
        max_sum = current_sum

        for i in range(array_size - k):
            current_sum = current_sum - arr[i] + arr[i+k]
            max_sum = max(current_sum, max_sum)
        return max_sum

arr = [20, 50, 70, 390, -410, 5, 6, 8, 345, 432, -54]

k = 3

result = max_sum(arr, k)

if result != None:
    print(result)


#*--------Whiteboarding Attempt--------------------------------

def longest_increasing(nums):
    if len nums==1:
        return 1
    else:
        left, right = 0
        max_length = 0 

        while (right < len(nums)):
            right +=1
            current_length = right - left 
            max_length =max(current_length, max_length)

            if (right < len(nums)) and (nums[right-1]) >= nums[right]:
                left = right 
        
        return max_length


nums = [1,3,5,4,7]

result = longest_increasing(nums)

print(f"The longest increasing subarray is {result} indices long")